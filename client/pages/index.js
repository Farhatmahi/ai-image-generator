import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import FormField from "@/components/FormField";
import Loader from "@/components/Loader";
import Card from "@/components/Card";
import { motion } from "framer-motion";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0)
    return data.map((post) => <Card key={post._id} {...post} />);

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const res = await fetch("https://ai-image-generator-ochre.vercel.app/api/post");
        if (res.ok) {
          const result = await res.json();
          console.log(result);
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ delay: 0.5 }}
      exit={{ opacity: 0 }}
      className="pb-20"
    >
      <section className="container mx-auto">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">
            The Community <span className="bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 text-transparent bg-clip-text">Showcase</span>
          </h1>
          <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
            Browse through a collection of imaginative and visually stunning
            images generated by OpenAI
          </p>
        </div>
        <div className="mt-16 ">
          <FormField
            label="Search Photo"
            type="text"
            name="text"
            placeholder="Write a keyword"
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>
        <div className="mt-10">
          {loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing results for{" "}
                  <span className="text-[#222328]">{searchText}</span>
                </h2>
              )}
            </>
          )}
          <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText ? (
              <RenderCards
                data={searchedResults}
                title="No search results found"
              />
            ) : (
              <RenderCards data={allPosts} title="No posts found" />
            )}
          </div>
        </div>
      </section>
    </motion.div>
  );
}
